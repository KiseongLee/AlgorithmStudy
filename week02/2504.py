'''
문제 : 괄호 값을 앞에서 정의한대로 계산하여 출력

입력 : 첫째 줄에 괄호열을 나타내는 문자열 (스트링) 주어짐 [1, 30]

출력 : 첫째 줄에 그 괄호열의 값을 나타내는 정수를 출력, 만일 입력이 올바르지 못하다면 0을 출력해야함.

조건 :
1) () 2
2) [] 3
3) (X) 2X
4) [X] 3X
5) XY X+Y

1. stack을 어떻게 활용할지?

2. 연속으로 오는 것은 더하기 / 안에 감싸고 있는 것은 곱하기 어떻게 분리?

3. (), []와 구분도 해줘야함 --> 숫자

4. 괄호가 잘못 입력되면 0도 출력해줘야함.

----


1. 더하기 곱하기 구분

2. 괄호 대괄호 구분

--> stack을 사용해서 구분지어보기

(()[[]])([]) = 2*(2+3*3)+2*3

뺐는데 stack이 남아 있으면 더하기

뺐는데 없다하면 곱하기

[ (, (, ), [, [, ], ], ), (, [, ], ) ]

괄호랑 대괄호를 구분해야하는데 왜냐하면 이거 둘이 숫자가 달라져서 그렇지

숫자로 빠질 때, 규칙을 못찾겠네

숫자까지는 받아올 수 있겠다.


괄호 대괄호 구분해서 숫자는 받아올 수 있음

더하기 곱하기를 구분해보자

연속으로 오는 것은 더하기래

안에 감싸고 있는 것은 곱하기래

이걸 구분해서 받아오기만 하면된다.

--------

스택을 혹시 구분해서 받아볼래

나눠서 받아야할거같은데

[(())()] 2*2+2
 0 1 2 7 8 11
[[[]][]] 3*3+3
 3 4 5 6 9 10

----------

순서도 안되 구분지어 받아도 안되 어떻게 더하기 곱하기 구분을 할까

1. 스택에 값이 있으면 vs 없으면

2. 오른쪽 소괄호 대괄호 들어오면 바로 pop 



'''


a = list(input())
stack = []
temp = 1
res = 0
for j in range(len(a)) :
    
    if a[j] == "(" :
        temp *= 2
        stack.append(a[j])
        
    if a[j] == "[":
        temp *= 3
        stack.append(a[j])
            
    elif a[j] == ")" :
        if not stack or stack[-1] == "[":
            res = 0
            break
        
        if a[j-1] == "(":
           
           res += temp
        temp //= 2
        stack.pop()
           
    elif a[j] == "]" :
        if not stack or stack[-1] == "(":
           res = 0
           break
        
        if a[j-1] == "[":
            res += temp
        temp //= 3
        stack.pop()


if stack:
   res = 0
      
print(res)