# 10분 - 5분정도 멍때림 (ㅁㅊ놈이냐..), 5분정도 식을써봄 -> dp 처럼은 아니어도 규칙은 찾음
# 5분 - 잘 생각했다고 한 나의 풀이가 틀렸다는 것을 꺠달음 
# 5분 - 머릿속이 복잡해짐, 잘모르겠다..
# 5분 - 약간 느낌이 왔음 한번 구현 시되해보자
# 10분 - 2개 뽑는 것의 점화식은 구함, 3개뽑는 것도 때려보자
# 15분 - 멘탈찢김 ㅎㅎ


n = int(input())
k = int(input())
dp = [[0]*(n+1) for _ in range(n+1)]

# dp 테이블 초기화
for i in range(n+1):
    dp[i][0] = 1
    dp[i][1] = i

# 선형일 때, 경우의 수를 구한다.
for i in range(2, n+1):
    for j in range(1, k+1):
        dp[i][j] = (dp[i-2][j-1] + dp[i-1][j])%1000000003

# 원형으로 생각할 때의 경우의 수를 따로 구해준다
answer = (dp[n-3][k-1]+dp[n-1][k])%1000000003
print(answer)

# 원형으로 갱신을 하는 것이 아니라
# 선형으로 갱신을 해주고 원형일 때로 계산을 해주면 되는 문제였다.
# 생각보다 이해하기가 어려웠는데 할만하기도하고 정리를 잘해놓자.